name: CI/CD foodgram

on: push

jobs:
  tests:
    name: Flake8 and pytest
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v3
    - 
      name: Setup python
      uses: actions/setup-python@v2
      with: 
        python-version: 3.7
    - 
      name: Install dependencies
      run: |
        python -m pip install -r backend/requirements.txt --upgrade pip --use-pep517
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
    - 
      name: Test with flake8
      run: python -m flake8
    - 
      name: Test with pytest
      run: pytest
  build:
    name: Build and push images
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }} 
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - 
        name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Build and push backend
        uses: docker/build-push-action@v3
        with:
          context: ./backend/
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/foodgram_backend:latest
      - 
        name: Build and push frontend
        uses: docker/build-push-action@v3
        with:
          context: ./frontend/
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/foodgram_frontend:latest
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      -
        name: SSH deploy commands on remote host
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker-compose stop
            sudo docker-compose rm -f backend
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/foodgram_backend
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} > .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo HOST=${{ secrets.HOST }} >> .env
            echo SECRET_KEY="${{ secrets.SECRET_KEY }}" >> .env
            sudo docker-compose up -d
            sudo docker-compose exec -T backend python manage.py makemigrations
            sudo docker-compose exec -T backend python manage.py migrate
            sudo docker-compose exec -T backend python manage.py collectstatic --no-input
            sudo docker-compose exec -T backend python manage.py create_admin \
            --username ${{ secrets.ADMIN_USERNAME }} \
            --email ${{ secrets.ADMIN_EMAIL }} \
            --password ${{ secrets.ADMIN_PASSWORD }}
  send_message:
    name: Send message
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message to telegram 
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
      
